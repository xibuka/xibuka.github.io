<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Secrets Management on Wenhan blog</title>
    <link>https://wenhan.blog/tags/secrets-management/</link>
    <description>Recent content in Secrets Management on Wenhan blog</description>
    <image>
      <title>Wenhan blog</title>
      <url>https://wenhan.blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://wenhan.blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Feb 2023 00:34:38 +0900</lastBuildDate><atom:link href="https://wenhan.blog/tags/secrets-management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HashiCorp Vaultを参照しKongGatewayをデプロイ</title>
      <link>https://wenhan.blog/post/20230223_vault_konggwdeploy_via_sm/</link>
      <pubDate>Thu, 23 Feb 2023 00:34:38 +0900</pubDate>
      
      <guid>https://wenhan.blog/post/20230223_vault_konggwdeploy_via_sm/</guid>
      <description>背景 Kong Gateway 3.0 から、Secrets ManagementがGAとなりました。Kong Gateway は、データベースのパスワードからプラグインで使用される API キーまで、多くのSecretに依存して動作します。以前ではRBACを使って、Admin APIとKong Managerから機密情報へのアクセスを制限できましたが、Secretを平文で表示されずに管理できたら嬉しいですよね。これを実現できるのはSecrets Managementです。
サポートするVault 現時点で、サポートしているVaultは以下の４種類です。
 AWS Secrets Manager GCP Secrets Manager HashiCorp Vault Environment Variable  Kong は、上記の各システムを抽象化して、利用するときにVaultのキーワード(hcv、aws、gcpまたは env)を変更するだけで利用できます。たとえば、HashiCorp Vaultの Postgres Secretのpassword フィールドにアクセスするには、次のフォーマットで参照できます。
{vault://hcv/postgres/password}  AWS Secrets Managerの場合
{vault://aws/postgres/password}  環境変数の場合
export POSTGRES=&#39;{&amp;quot;username&amp;quot;:&amp;quot;user&amp;quot;, &amp;quot;password&amp;quot;:&amp;quot;pass&amp;quot;}&#39; {vault://env/postgres/password}  デモ では実際にSecrets Managementを使ってVaultのSecretsを参照し、Kongのデプロイを試してみよう
Vault環境を用意 ここで、TOKEN_IDをkongにします。この値は後の認証するときに使用されます。
1 2 3 4 5 6  docker run -d --name vault.idp \ --network=kong-net \ -e &amp;#34;VAULT_DEV_ROOT_TOKEN_ID=kong&amp;#34; \ -p 8200:8200 \ --cap-add=IPC_LOCK \ vault:latest   Secretを作成 コンテナーに入って、Secretを作成しましょう</description>
    </item>
    
  </channel>
</rss>
